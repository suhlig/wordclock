#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'faderuby'
require 'word_clock/clock_24'
require 'word_clock/xkcd_color_sampler'
require 'word_clock/influxdb_gateway'
require 'word_clock/color_picker'
require 'word_clock/delta_calculator'
require 'word_clock/luminance_range_sampler'

if ARGV.size.zero?
  time = Time.now
elsif ARGV.size == 1
  time = Time.parse(ARGV.first)
else
  warn "Unknown arguments #{ARGV}"
  exit 1
end

client = FadeRuby::Client.new(
  ENV.fetch('OPC_HOST', 'localhost'),
  ENV.fetch('OPC_PORT', '7890').to_i
)

strip = FadeRuby::Strip.new(18 * 16)
strip.set_all(r: 0, g: 0, b: 0)
client.write(strip)

gw = WordClock::InfluxDbGateway.new(
  ENV.fetch('INFLUXDB_DATABASE'),
  host:       ENV.fetch('INFLUXDB_HOST'),
  use_ssl:  !!ENV.fetch('INFLUXDB_SSL'),
  port:       ENV.fetch('INFLUXDB_PORT'),
  username:   ENV.fetch('INFLUXDB_USER'),
  password:   ENV.fetch('INFLUXDB_PASSWORD'),
)

current_relative_luminance = gw.current_illuminance / gw.illuminance_percentile(95)
luminance_range = WordClock::DeltaCalculator.new(current_relative_luminance, 0.2).to_range
color_sampler = WordClock::LuminanceRangeSampler.new(WordClock::XkcdColorSampler.new, luminance_range)
color_picker = WordClock::ColorPicker.new(color_sampler)

WordClock::Clock24.new(time).pixels.each do |i|
  color = color_picker.choose(time)
  strip.pixels[i].set(color.to_h)
end

client.write(strip)
